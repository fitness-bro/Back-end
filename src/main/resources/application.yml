spring:
  datasource:
    url: ${AWS_DB_URL}
    username: ${AWS_DB_USER}
    password: ${AWS_DB_PASS}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never

  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me


            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        registration:
          google:
            client-id: ${GOOGLE_SOCIAL_CLIENT_ID}
            client-secret: ${GOOGLE_SOCIAL_CLIENT_SECRET}
            redirect-uri: https://dev.fitness-bro.pro/login/oauth2/code/google
            scope:
              - profile
              - email

          kakao:
            client-id: ${KAKAO_SOCIAL_CLIENT_ID}
            client-secret: ${KAKAO_SOCIAL_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: https://dev.fitness-bro.pro/login/oauth2/code/{registrationId}
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - account_email
              - profile_nickname
          naver:
            client-id: ${NAVER_SOCIAL_CLIENT_ID}
            client-secret: ${NAVER_SOCIAL_CLIENT_SECRET}
            redirect-uri: https://dev.fitness-bro.pro/login/oauth2/code/{registrationId}
            authorization-grant-type: authorization_code
            scope: email, name

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000

cloud:
  aws:
    s3:
      bucket: fitness-bro-bucket
      path:
        profile: profile
        reviews: reviews
        album: album
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}


logging:
  level:
    org.hibernate.SQL: debug

servlet:
  multipart:
    enabled: true
    maxFileSize: 200MB
    maxRequestSize: 300MB

jwt:
  secret: ${SECRET_KEY}
  #access:
  #  expiration: 3600000 # 1시간(60분) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
  #  header: Authorization

  #  refresh:
  #    expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
  #    header: Authorization-refresh

